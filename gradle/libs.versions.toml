[versions]
kotlin = "1.9.25"
spring-boot = "3.5.4"
spring-dependency-management = "1.1.7"
testcontainers = "1.20.4"
jackson = "2.18.2"
reactor = "2024.0.1"
flyway = "11.1.0"
postgresql = "42.7.5"
r2dbc-postgresql = "1.0.7.RELEASE"
spring-session = "3.4.0"
kotlinx-coroutines = "1.9.0"

[libraries]
# Spring Boot Starters
spring-boot-starter-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-boot-starter-graphql = { module = "org.springframework.boot:spring-boot-starter-graphql" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail" }
spring-boot-starter-oauth2-authorization-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-authorization-server" }
spring-boot-starter-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-tomcat = { module = "org.springframework.boot:spring-boot-starter-tomcat" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

# Spring Session
spring-session-jdbc = { module = "org.springframework.session:spring-session-jdbc", version.ref = "spring-session" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }

# Reactor
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
reactor-test = { module = "io.projectreactor:reactor-test" }

# Database
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
r2dbc-postgresql = { module = "org.postgresql:r2dbc-postgresql", version.ref = "r2dbc-postgresql" }

# Testing
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-graphql-test = { module = "org.springframework.graphql:spring-graphql-test" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc", version.ref = "testcontainers" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

[bundles]
# Core Spring Boot dependencies
spring-boot-web = [
    "spring-boot-starter-web",
    "jackson-module-kotlin",
    "kotlin-reflect"
]

# Database access (both blocking and reactive)
spring-data = [
    "spring-boot-starter-data-jdbc",
    "spring-boot-starter-data-jpa",
    "spring-boot-starter-data-r2dbc",
    "spring-boot-starter-jdbc",
    "spring-session-jdbc"
]

# Security dependencies
spring-security = [
    "spring-boot-starter-security",
    "spring-boot-starter-oauth2-authorization-server",
    "spring-boot-starter-oauth2-resource-server"
]

# Database runtime dependencies
database = [
    "flyway-core",
    "flyway-database-postgresql",
    "postgresql",
    "r2dbc-postgresql"
]

# Reactive dependencies
reactive = [
    "reactor-kotlin-extensions",
    "kotlinx-coroutines-reactor"
]

# Test dependencies
testing = [
    "spring-boot-starter-test",
    "spring-boot-testcontainers",
    "reactor-test",
    "kotlin-test-junit5",
    "kotlinx-coroutines-test",
    "spring-graphql-test",
    "spring-security-test",
    "testcontainers-junit-jupiter",
    "testcontainers-postgresql",
    "testcontainers-r2dbc"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }